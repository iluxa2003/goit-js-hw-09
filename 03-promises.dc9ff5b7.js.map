{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,GADYC,SAASC,cAAc,uBAC3BD,SAASC,cAAc,sBAC/BC,EAAOF,SAASC,cAAc,oBAC9BE,EAASH,SAASC,cAAc,sBAGtC,SAASG,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAZ,GAASa,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAGtEG,EAAAZ,GAASa,OAAOG,QAAQ,sBAAuCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAT5DN,SAASC,cAAc,SAqC/Ba,iBAAiB,UAJL,SAAAC,GACfA,EAAMC,iBAtBR,WAME,IAAK,IAAIC,EAAI,EAAGA,EAAIC,SAASf,EAAOgB,OAAQF,IAAK,CAC/C,IAAMG,EAAUF,SAASnB,EAAMoB,OAASD,SAAShB,EAAKiB,OAASF,EAC/Db,EAAcC,SAAUe,GACrBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARjB,SAAUmB,EAAKF,EAALG,MACjBhB,EAAAZ,GAASa,OAAOC,QACd,uBAAwCC,OAAfW,EAAS,QAAYX,OAANY,EAAM,UAGjDE,OAAM,SAAAJ,G,IAAGC,EAAQD,EAARjB,SAAUsB,EAAKL,EAALG,MAClBhB,EAAAZ,GAASa,OAAOG,QACd,sBAAqCD,OAAfW,EAAS,QAAYX,OAANe,EAAM,WAOnDC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst subButton = document.querySelector('button[type=submit]');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\n// position, delay\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\nfunction repetable() {\n  // for(let i = 0; i<parseInt(amount.value) ;i++){\n  // const special = (parseInt(delay.value) + parseInt(step.value)*i)\n  //   // const special = delay.value + step.value*i\n  //   setTimeout(createPromise,special,i+1, special)\n  // }\n  for (let i = 0; i < parseInt(amount.value); i++) {\n    const special = parseInt(delay.value) + parseInt(step.value) * i;\n    createPromise(position, special)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\nconst starting = event => {\n  event.preventDefault();\n  repetable();\n};\nform.addEventListener('submit', starting);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Math","random","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","event","preventDefault","i","parseInt","value","special","then","param","_$position","delay2","delay","catch","delay3","$ce04d3a99e08e73b$var$repetable"],"version":3,"file":"03-promises.dc9ff5b7.js.map"}