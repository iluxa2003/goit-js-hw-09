{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,GADYC,SAASC,cAAc,uBAC3BD,SAASC,cAAc,sBAC/BC,EAAOF,SAASC,cAAc,oBACrBD,SAASC,cAAc,sBACzBD,SAASC,cAAc,SA8B/BE,iBAAiB,UAJJ,SAAAC,GAdlB,IAEUC,EAaRD,EAAME,iBAbED,EAAWE,SAASR,EAAMS,OAASD,SAASL,EAAKM,OAAOC,EAIhEC,cAAcC,SAAUN,GACvBO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUI,EAAKF,EAALG,MACjBC,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAEvEM,OAAM,SAAAR,G,IAAGC,EAAQD,EAARF,SAAUW,EAAKT,EAALG,MAClBC,EAAApB,GAASqB,OAAOK,QAAQ,sBAAqCH,OAAfN,EAAS,QAAYM,OAANE,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst subButton = document.querySelector(\"button[type=submit]\")\nconst delay = document.querySelector(\"input[name=delay]\")\nconst step = document.querySelector(\"input[name=step]\")\nconst amount = document.querySelector(\"input[name=amount]\")\nconst form = document.querySelector('.form')\n// position, delay\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   } else {\n//     // Reject\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }\n// }\nfunction repetable(){\n  // for(let i = 0; i<parseInt(amount.value) ;i++){\n    const special = (parseInt(delay.value) + parseInt(step.value)*i)\n  //   // const special = delay.value + step.value*i\n  //   setTimeout(createPromise,special,i+1, special)\n  // }\n  createPromise(position, special)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\nconst  starting = event => {\n  event.preventDefault();\n  repetable();\n}\nform.addEventListener(\"submit\",starting)"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","addEventListener","event","special","preventDefault","parseInt","value","i","createPromise","position","then","param","_$position","delay1","delay","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.9f719aeb.js.map"}