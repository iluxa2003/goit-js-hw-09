{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACkBC,SAASC,cAAc,uBAAzC,MACMC,EAAQF,SAASC,cAAc,qBAC/BE,EAAOH,SAASC,cAAc,oBAC9BG,EAASJ,SAASC,cAAc,sBAGtC,SAASI,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAZ,GAASa,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAG9DG,EAAAZ,GAASa,OAAOE,QAAQ,sBAAoBP,QAAiBC,OATpDP,SAASC,cAAc,SAsC/Ba,iBAAiB,UAJLC,IACfA,EAAMC,iBAvBR,WAME,IAAK,IAAIC,EAAI,EAAGA,EAAIC,SAASd,EAAOe,OAAQF,IAG1CZ,EADQY,EAAE,EADMC,SAAShB,EAAMiB,OAASD,SAASf,EAAKgB,OAASF,GAG5DG,MAAK,EAACC,EAACA,EAACC,QAAEA,MACTZ,EAAAZ,GAASa,OAAOC,QACd,uBAAqBN,eAAiBJ,UAGzCqB,OAAM,EAACF,EAACA,EAACC,QAAEA,MACVZ,EAAAZ,GAASa,OAAOE,QACd,sBAAoBP,eAAeJ,UAO3CsB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst subButton = document.querySelector('button[type=submit]');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\n// position, delay\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\nfunction repetable() {\n  // for(let i = 0; i<parseInt(amount.value) ;i++){\n  // const special = (parseInt(delay.value) + parseInt(step.value)*i)\n  //   // const special = delay.value + step.value*i\n  //   setTimeout(createPromise,special,i+1, special)\n  // }\n  for (let i = 0; i < parseInt(amount.value); i++) {\n    const special = parseInt(delay.value) + parseInt(step.value) * i;\n    let z = i+1;\n    createPromise(z, special)\n      .then(({z, special }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({z, special}) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\nconst starting = event => {\n  event.preventDefault();\n  repetable();\n};\nform.addEventListener('submit', starting);\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Math","random","$parcel$interopDefault","Notify","success","failure","addEventListener","event","preventDefault","i","parseInt","value","then","z","special","catch","$47d4ff9957288465$var$repetable"],"version":3,"file":"03-promises.8de9c765.js.map"}