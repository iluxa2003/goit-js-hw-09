{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACkBC,SAASC,cAAc,uBAAzC,MACMC,EAAQF,SAASC,cAAc,qBAC/BE,EAAOH,SAASC,cAAc,oBAC9BG,EAASJ,SAASC,cAAc,sBACzBD,SAASC,cAAc,SAqC/BI,iBAAiB,UAJLC,IACfA,EAAMC,iBAtBR,WAME,IAAK,IAAIC,EAAI,EAAGA,EAAIC,SAASL,EAAOM,OAAQF,IAAK,EAhB5BG,EAkBLH,EAAE,EAlBaI,EAiBbH,SAASP,EAAMQ,OAASD,SAASN,EAAKO,OAASF,OAhB3CK,KAAKC,SAAW,GAGpCC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBN,QAAiBC,OAG9DG,EAAAjB,GAASkB,OAAOE,QAAQ,sBAAoBP,QAAiBC,SAY1DO,MAAK,EAACR,SAAEA,EAAUS,MAAAC,MACjBN,EAAAjB,GAASkB,OAAOC,QACd,uBAAqBN,QAAiBU,UAGzCC,OAAM,EAACX,SAAEA,EAAUS,MAAAG,MAClBR,EAAAjB,GAASkB,OAAOE,QACd,sBAAoBP,QAAeY,UA1B7C,IAAuBZ,EAAUC,EAiC/BY","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst subButton = document.querySelector('button[type=submit]');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\n// position, delay\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\nfunction repetable() {\n  // for(let i = 0; i<parseInt(amount.value) ;i++){\n  // const special = (parseInt(delay.value) + parseInt(step.value)*i)\n  //   // const special = delay.value + step.value*i\n  //   setTimeout(createPromise,special,i+1, special)\n  // }\n  for (let i = 0; i < parseInt(amount.value); i++) {\n    const special = parseInt(delay.value) + parseInt(step.value) * i;\n    createPromise(i+1, special)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\nconst starting = event => {\n  event.preventDefault();\n  repetable();\n};\nform.addEventListener('submit', starting);\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","i","parseInt","value","position","delay1","Math","random","$parcel$interopDefault","Notify","success","failure","then","delay","delay2","catch","delay3","$47d4ff9957288465$var$repetable"],"version":3,"file":"03-promises.a2eb3096.js.map"}