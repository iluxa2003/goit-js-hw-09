{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,GADYC,SAASC,cAAc,uBAC3BD,SAASC,cAAc,sBAC/BC,EAAOF,SAASC,cAAc,oBAC9BE,EAASH,SAASC,cAAc,sBACzBD,SAASC,cAAc,SAqC/BG,iBAAiB,UAJL,SAAAC,GACfA,EAAMC,iBAtBR,WAME,IAAK,IAAIC,EAAI,EAAGA,EAAIC,SAASL,EAAOM,OAAQF,IAAK,CAC/C,IAAMG,EAAUF,SAAST,EAAMU,OAASD,SAASN,EAAKO,OAASF,EAC/DI,cAAcC,SAAUF,GACrBG,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUI,EAAKF,EAALG,MACjBC,EAAArB,GAASsB,OAAOC,QACd,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,UAGjDM,OAAM,SAAAR,G,IAAGC,EAAQD,EAARF,SAAUW,EAAKT,EAALG,MAClBC,EAAArB,GAASsB,OAAOK,QACd,sBAAqCH,OAAfN,EAAS,QAAYM,OAANE,EAAM,WAOnDE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst subButton = document.querySelector('button[type=submit]');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst form = document.querySelector('.form');\n// position, delay\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   } else {\n//     // Reject\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }\n// }\nfunction repetable() {\n  // for(let i = 0; i<parseInt(amount.value) ;i++){\n  // const special = (parseInt(delay.value) + parseInt(step.value)*i)\n  //   // const special = delay.value + step.value*i\n  //   setTimeout(createPromise,special,i+1, special)\n  // }\n  for (let i = 0; i < parseInt(amount.value); i++) {\n    const special = parseInt(delay.value) + parseInt(step.value) * i;\n    createPromise(position, special)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\nconst starting = event => {\n  event.preventDefault();\n  repetable();\n};\nform.addEventListener('submit', starting);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","i","parseInt","value","special","createPromise","position","then","param","_$position","delay1","delay","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure","$ce04d3a99e08e73b$var$repetable"],"version":3,"file":"03-promises.54426ef7.js.map"}